version: '3'
services:
  nginx:
    container_name: nginx
    expose:
      - 1443
    ports:
      - "1443:443"
    volumes:
      - "./nginx/conf/:/etc/nginx/conf.d/:rw"
    networks:
      - frontend
    build:
      context: ./nginx
    restart: always
    command: [ nginx-debug, '-g', 'daemon off;' ]

  postgres:
    image: postgres:latest
    container_name: postgres
    expose:
      - 5432
    ports:
      - "6500:5432"
    networks:
      backend:
        ipv4_address: 192.168.176.2
    volumes:
      - postgresDB:/data/postgres
      - ./db/postgres.conf:/etc/postgresql/postgresql.conf
      - ./db/postgres.sql:/docker-entrypoint-initdb.d/postgres.sql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    env_file:
      - ./.env

  rest-api:
    image: hansendockedin/web-app-rest-api:latest
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://admin:password123@192.168.176.2:5432/rust_sqlx?schema=public

  webclient:
    image: hansendockedin/web-app-frontend:latest
    networks:
      - frontend
    expose:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT="Production"
      - SERVICE= "http://rest-api/api"
      - GOOGLE_OAUTH_CLIENT_ID= "320557105527-q2nr65cv030mrv9jbtt5j874h8bkpjj1.apps.googleusercontent.com"
      - MICROSOFT_OAUTH_CLIENT_ID= "d169d24c-3f89-4001-b142-71518363781b"
      - GOOGLE_OAUTH_CLIENT_SECRET="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"
      - MICROSOFT_OAUTH_CLIENT_SECRET="M9v8Q~yrMtSW40eSQnV.Xbx51ZboqW6ue5i6xcj9"
      - SERVICE_URL="http://rest-api/api"

volumes:
  postgresDB:

networks:
  backend:
  frontend: